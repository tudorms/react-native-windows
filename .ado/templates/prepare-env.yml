# Steps to checkout, install node_modules, yarn build, install SDK and install VS dependencies

parameters:
  yarnBuildCmd: build
  debug: false

  # Visual Studio Installer
  vsComponents: ''
  listVsComponents: false
  installVsComponents: false

steps:
  - task: PowerShell@2
    displayName: Display env
    inputs:
      targetType: "inline"
      script:  gci env:* | sort-object name

  - task: PowerShell@2
    displayName: Display disksize
    inputs:
      targetType: inline # filePath | inline
      script: |
        Get-WmiObject Win32_LogicalDisk

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: ">=4.6.0"

  - template: yarn-install.yml

  - task: CmdLine@2
    displayName: yarn ${{ parameters.yarnBuildCmd }}
    inputs:
      script: yarn ${{ parameters.yarnBuildCmd }}

  - task: PowerShell@2
    displayName: List Visual Studio Components
    inputs:
      targetType: filePath
      filePath: $(Build.SourcesDirectory)/.ado/VSComponentList.ps1
    condition: and(succeeded(), ${{ parameters.listVsComponents }})

  - task: PowerShell@2
    displayName: Install Visual Studio dependencies
    inputs:
      targetType: filePath
      filePath: $(Build.SourcesDirectory)/vnext/Scripts/Tfs/Install-VsFeatures.ps1
      arguments:
        -Components ${{ parameters.vsComponents }}
        -Collect:$${{ parameters.debug }}
        -Cleanup:$true
    condition: and(succeeded(), ${{ parameters.installVsComponents }})

  - task: PowerShell@2
    displayName: List disksize after prepare-env
    inputs:
      targetType: inline # filePath | inline
      script: |
        Get-WmiObject Win32_LogicalDisk

  - task: CmdLine@2
    displayName: Set LocalDumps for cl.exe
    inputs:
      script: $(Build.SourcesDirectory)\.ado\SetupLocalDumps.cmd cl
      workingDirectory: $(Build.SourcesDirectory)

  - task: CmdLine@2
    displayName: Set LocalDumps for link.exe
    inputs:
      script: $(Build.SourcesDirectory)\.ado\SetupLocalDumps.cmd link
      workingDirectory: $(Build.SourcesDirectory)

  - task: CmdLine@2
    displayName: Set LocalDumps for msbuild.exe
    inputs:
      script: $(Build.SourcesDirectory)\.ado\SetupLocalDumps.cmd msbuild
      workingDirectory: $(Build.SourcesDirectory)

  - powershell: |
        Write-Host "##vso[task.setvariable variable=MSBUILDDEBUGPATH]$(Build.StagingDirectory)\CrashDumps"
    displayName: Set MSBUILDDEBUGPATH

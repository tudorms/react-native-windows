// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

import "IReactContext.idl";
import "IReactDispatcher.idl";
import "IReactNotificationService.idl";
import "IReactPackageProvider.idl";
import "IReactPropertyBag.idl";
import "RedBoxHandler.idl";

namespace Microsoft.ReactNative {

  // Keep in sync with enum in IReactInstance.h
  enum JSIEngine {
    Chakra = 0,
    Hermes = 1,
    V8 = 2
  };

  [webhosthidden]
  [default_interface]
  runtimeclass InstanceCreatedEventArgs {
    IReactContext Context { get; };
  }

  [webhosthidden]
  [default_interface]
  runtimeclass InstanceLoadedEventArgs {
    IReactContext Context { get; };
    Boolean Failed { get; };
  }

  [webhosthidden]
  [default_interface] runtimeclass InstanceDestroyedEventArgs {
    IReactContext Context { get; };
  }

  [webhosthidden]
  runtimeclass ReactInstanceSettings 
  {
    ReactInstanceSettings();

    IReactPropertyBag Properties { get; };
    IReactNotificationService Notifications { get; };
    IVector<IReactPackageProvider> PackageProviders { get; };
    Boolean UseDeveloperSupport { get; set; };
    // Deprecated - use JavaScriptBundleFile instead
    String JavaScriptMainModuleName { get; set; };
    String JavaScriptBundleFile { get; set; };
    Boolean UseWebDebugger { get; set; };
    Boolean UseFastRefresh { get; set; };
    Boolean UseLiveReload { get; set; };
    Boolean UseDirectDebugger { get; set; };
    Boolean DebuggerBreakOnNextLine { get; set; };
    Boolean UseJsi { get; set; };
    Boolean EnableJITCompilation { get; set; };
    Boolean EnableByteCodeCaching { get; set; };
    Boolean EnableDeveloperMenu { get; set; };
    String ByteCodeFileUri { get; set; };
    String DebugHost { get; set; };
    String DebugBundlePath { get; set; };
    String BundleRootPath { get; set; };
    UInt16 DebuggerPort { get; set; };
    IRedBoxHandler RedBoxHandler { get; set; };
    IReactDispatcher UIDispatcher { get; set; };
    String SourceBundleHost { get; set; };
    UInt16 SourceBundlePort { get; set; };
    JSIEngine JSIEngineOverride { get; set; };
    event Windows.Foundation.EventHandler<InstanceCreatedEventArgs> InstanceCreated;
    event Windows.Foundation.EventHandler<InstanceLoadedEventArgs> InstanceLoaded;
    event Windows.Foundation.EventHandler<InstanceDestroyedEventArgs> InstanceDestroyed;
  }
}
